from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker
from config.settings import DATABASE_URL
from database.models import Base
import os

# Adatb√°zis engine l√©trehoz√°sa
if os.environ.get("RENDER"):
    # RENDER: Connection pool N√âLK√úL - egyszer≈± SQLite
    engine = create_engine(
        DATABASE_URL,
        connect_args={
            "check_same_thread": False,
            "timeout": 60
        },
        poolclass=None,  # !!!!! FONTOS: NINCS CONNECTION POOL
        echo=False
    )
    print("üöÄ Production database config loaded")
else:
    # Development: norm√°l konfigur√°ci√≥
    engine = create_engine(DATABASE_URL, connect_args={"check_same_thread": False})
    print("üîß Development database config loaded")

# Session factory
SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)

def create_tables():
    """Adatb√°zis t√°bl√°k l√©trehoz√°sa"""
    # Mapp√°k l√©trehoz√°sa ha nem l√©teznek
    os.makedirs("data", exist_ok=True)
    os.makedirs("data/logs", exist_ok=True)
    os.makedirs("static/audio", exist_ok=True)
    
    Base.metadata.create_all(bind=engine)
    print("‚úÖ Adatb√°zis t√°bl√°k l√©trehozva")

def get_db():
    """Adatb√°zis session lek√©r√©se (FastAPI dependency)"""
    db = SessionLocal()
    try:
        yield db
    finally:
        db.close()

def get_db_session():
    """Egyszer≈± DB session (scriptekhez)"""
    return SessionLocal()

# Kezdeti setup futtat√°sa
if __name__ == "__main__":
    create_tables()
